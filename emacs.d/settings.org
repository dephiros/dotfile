* common settings
** Ubiquitous Packages which should be loaded on startup rather than autoloaded on demand since they are likely to be used in every session.
#+BEGIN_SRC emacs-lisp
  (require 'cl)
  (require 'cl-lib)
  (require 'saveplace)
  (require 'ffap)
  (require 'uniquify)
  (require 'ansi-color)
  (require 'recentf)
#+END_SRC
** enable IDO
#+BEGIN_SRC emacs-lisp
(require 'ido)
(ido-mode t)
(setq ido-save-directory-list-file "~/.emacs.d/.ido.last")
(setq ido-enable-flex-matching t)
(setq ido-use-filename-at-point 'guess)
(setq ido-show-dot-for-dired t)
(setq ido-default-buffer-method 'selected-window)
(global-set-key (kbd "C-x C-b") 'ido-switch-buffer)
(global-set-key (kbd "C-x B") 'ibuffer)
#+END_SRC
** auto revert mode
-  whenever an external process changes a file underneath emacs, and there was no unsaved changes in the corresponding buffer, just revert its content to reflect what's on-disk.
#+BEGIN_SRC emacs-lisp
(global-auto-revert-mode 1)
#+END_SRC
** clipboard
#+BEGIN_SRC emacs-lisp
(setq x-select-enable-clipboard t)
#+END_SRC
** display settings
#+BEGIN_SRC emacs-lisp
;; on to the visual settings
(setq inhibit-splash-screen t)		; no splash screen, thanks
(line-number-mode 1)			; have line numbers and
(column-number-mode 1)			; column numbers in the mode line

(tool-bar-mode -1)			; no tool bar with icons
(scroll-bar-mode -1)			; no scroll bars
(unless (string-match "apple-darwin" system-configuration)
  ;; on mac, there's always a menu bar drown, don't have it empty
  (menu-bar-mode -1))

;; choose your own fonts, in a system dependant way
(if (string-match "apple-darwin" system-configuration)
    (set-face-font 'default "Monaco-13")
  (set-face-font 'default "Monospace-10"))

(global-linum-mode 1)			; add line numbers on the left

;; avoid compiz manager rendering bugs
(add-to-list 'default-frame-alist '(alpha . 100))
(when (string-match "apple-darwin" system-configuration)
  (setq mac-allow-anti-aliasing t))
#+END_SRC
* set up el-get
** load el-get if not already loaded
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/el-get/el-get")

(unless (require 'el-get nil t)
  (with-current-buffer
      (url-retrieve-synchronously
       "https://github.com/dimitri/el-get/raw/master/el-get-install.el")
    (end-of-buffer)
    (eval-print-last-sexp)))
; set recipes path for elget
(add-to-list 'el-get-recipe-path "~/.emacs.d/el-get-user/recipes")

#+END_SRC
** set list of el-get packages
#+BEGIN_SRC emacs-lisp

(setq
 el-get-sources
 '((:name buffer-move			; have to add your own keys
	  :after (progn
		   (global-set-key (kbd "<C-S-up>")     'buf-move-up)
		   (global-set-key (kbd "<C-S-down>")   'buf-move-down)
		   (global-set-key (kbd "<C-S-left>")   'buf-move-left)
		   (global-set-key (kbd "<C-S-right>")  'buf-move-right)))

   (:name smex				; a better (ido like) M-x
	  :after (progn
		   (setq smex-save-file "~/.emacs.d/.smex-items")
		   (global-set-key (kbd "M-x") 'smex)
		   (global-set-key (kbd "M-X") 'smex-major-mode-commands)))

   (:name magit				; git meet emacs, and a binding
	  :after (progn
		   (global-set-key (kbd "C-x C-z") 'magit-status)))
   (:name evil
	  :after (progn
                   (require 'evil)
                   (evil-mode t)))

   (:name evil-org-mode
 	  :after (progn
                   (add-to-list 'load-path "~/.emacs.d/plugins/evil-org")
                   (require 'evil-org)
                   (add-hook 'org-mode-hook 'evil-org-mode)))

   (:name goto-last-change		; move pointer back to last change
	  :after (progn
		   ;; when using AZERTY keyboard, consider C-x C-_
		   (global-set-key (kbd "C-x C-/") 'goto-last-change)))))

(setq
 my:el-get-packages
 '(el-get
   evil
   evil-org-mode
   magit
   cedet
   yasnippet
   zencoding-mode
   color-theme
   base16))
(el-get 'sync my:el-get-packages)
#+END_SRC

* start emacs server
#+BEGIN_SRC emacs-lisp
;; start emacs server
(require 'server)
(unless (server-running-p)
  (server-start))
#+END_SRC
