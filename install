#!/usr/bin/env zsh
############################
# .make.sh
# This script creates symlinks from the home directory to any desired dotfiles in ~/dotfiles
############################

########## Variables

dir=$HOME/dotfiles                    # dotfiles directory
olddir=$HOME/dotfiles_old             # old dotfiles backup directory
dotfiles=("vimrc" "vim" "emacs" "zshrc" "zshenv" "gitignore_global" "abcde.conf" "tmux.conf")    # list of files/folders to symlink in homedir

##########

# set up space emacs
 if [ ! -d "$HOME/.emacs.d" ]; then
   echo 'could not find emacs.d. installing spacemacs'
   rm ~/.emacs #otherwise this will conflict
   git clone https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
   echo "\n"
fi

# set up pyenv pyenv global python-3
if hash pyenv 2>/dev/null; then
   echo 'pyenv global python-3'
else
   curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash   
fi

# set up oh-my-zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    git clone git://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh
    chsh -s zsh
    echo "\n"
fi

if [ ! -d "$HOME/.tmux" ]; then
    git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm
    echo "\n"
fi
# set up ssh-find-agent
if [ ! -d "$HOME/ssh-find-agent" ]; then
  echo 'Pulling ssh-find-agent'
  git clone https://github.com/wwalker/ssh-find-agent.git "$HOME/ssh-find-agent"
  echo "\n"
fi

# create dotfiles_old in homedir
echo "Creating $olddir for backup of any existing dotfiles in ~"
mkdir -p $olddir
echo "...done\n"

# change to the dotfiles directory
echo "Changing to the $dir directory"
cd $dir
echo "...done\n"

# move any existing dotfiles in homedir to dotfiles_old directory, then create symlinks 
echo "Linking dotfiles"
for file in $dotfiles; do
    echo "Moving existing $file from ~ to $olddir"
    mv $HOME/.$file $HOME/dotfiles_old/ 2> /dev/null
    echo "Creating symlink to $file in home directory."
    ln -s $dir/$file $HOME/.$file 2> /dev/null
done
echo "...done\n"

# set up git
if ! type "git" > /dev/null; then
    echo "git is not installed, install git and rerun install script"
else
    gitEditor="$(which vi)"
    if ! type "emacsclient" 2> /dev/null; then
        echo "could not find emacsclient, setting git editor to vim"
    else
        gitEditor="$(which emacsclient) -t"
    fi
    echo "setting up git"
    git config --global core.editor "$gitEditor"
    git config --global core.excludesfile "$HOME/.gitignore_global"
    git config --global difftool.prompt "true"
    git config --global push.default simple
    echo "finished setting up git"
fi

# link nvimrc with vim
#ln -s $dir/vimrc ~/.nvimrc
#ln -s $dir/vim ~/.nvim

